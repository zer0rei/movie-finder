{"version":3,"sources":["assets/logo.svg","assets/movie-clapper.svg","assets/television.svg","components/Header/Header.js","components/CategoryButton/CategoryButton.js","components/Home/Home.js","hooks/useAxios.js","components/BackButton/BackButton.js","utils/index.js","components/ShowItem/ShowItem.js","components/LoadingIndicator/LoadingIndicator.js","components/EmptyState/EmptyState.js","components/ShowList/ShowList.js","components/ShowDetails/ShowDetails.js","components/App/App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","onLogoClick","className","data-testid","onClick","src","logo","alt","CategoryButton","title","subtitle","icon","Home","onMoviesClick","onSeriesClick","movieIcon","seriesIcon","dataFetchReducer","state","action","type","isLoading","isError","data","payload","Error","useAxios","initialUrl","initialData","useState","url","setUrl","useReducer","dispatch","useEffect","didCancel","a","axios","result","fetchData","BackButton","toUpperInitial","string","toUpperCase","substr","ShowItem","image","index","releaseYear","onMoreInfoClick","LoadingIndicator","EmptyState","message","description","showsAPI","ShowList","onBackButtonClick","onDetailsShow","searchQuery","setSearchQuery","shows","entries","length","showType","filter","programType","slice","sort","b","localeCompare","numeric","toLowerCase","includes","toString","aria-label","placeholder","onChange","e","target","value","map","show","key","images","defaultProps","ShowDetails","App","currentPage","setCurrentPage","currentShowInDetailsPage","setCurrentShowInDetailsPage","handlePageChange","page","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.901b327e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.bb4244da.svg\";","module.exports = __webpack_public_path__ + \"static/media/movie-clapper.9231dfe5.svg\";","module.exports = __webpack_public_path__ + \"static/media/television.41723b11.svg\";","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./Header.css\";\nimport logo from \"../../assets/logo.svg\";\n\nfunction Header({ onLogoClick }) {\n  return (\n    <header className=\"header\">\n      <div\n        className=\"header__logo-container\"\n        data-testid=\"logo-container\"\n        onClick={onLogoClick}\n      >\n        <img className=\"header__logo\" src={logo} alt=\"logo\" />\n        <div className=\"header__title\">Movie Finder</div>\n      </div>\n    </header>\n  );\n}\n\nHeader.propTypes = {\n  onLogoClick: PropTypes.func\n};\n\nexport default Header;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./CategoryButton.css\";\n\nfunction CategoryButton({ className, title, subtitle, icon, onClick }) {\n  return (\n    <div className={`category-button ${className}`}>\n      <button\n        data-testid=\"category-button\"\n        className=\"category-button__button\"\n        onClick={onClick}\n      >\n        {icon && (\n          <img\n            className=\"category-button__icon\"\n            src={icon}\n            alt=\"category button icon\"\n          />\n        )}\n        {title && <h3 className=\"category-button__title\">{title}</h3>}\n      </button>\n      {subtitle && <h5 className=\"category-button__subtitle\">{subtitle}</h5>}\n    </div>\n  );\n}\n\nCategoryButton.propTypes = {\n  className: PropTypes.string,\n  title: PropTypes.string,\n  subtitle: PropTypes.string,\n  icon: PropTypes.string,\n  onClick: PropTypes.func\n};\n\nexport default CategoryButton;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./Home.css\";\nimport CategoryButton from \"../CategoryButton\";\nimport movieIcon from \"../../assets/movie-clapper.svg\";\nimport seriesIcon from \"../../assets/television.svg\";\n\nfunction Home({ onMoviesClick, onSeriesClick }) {\n  return (\n    <div className=\"home\">\n      <h1 className=\"home__title\">Top Rated Titles</h1>\n      <div className=\"home__categories\">\n        <CategoryButton\n          title=\"Movies\"\n          icon={movieIcon}\n          subtitle=\"Top rated Movies\"\n          onClick={onMoviesClick}\n        />\n        <CategoryButton\n          className=\"home__categories__series-button\"\n          title=\"Series\"\n          icon={seriesIcon}\n          subtitle=\"Top rated Series\"\n          onClick={onSeriesClick}\n        />\n      </div>\n    </div>\n  );\n}\n\nHome.propTypes = {\n  onMoviesClick: PropTypes.func,\n  onSeriesClick: PropTypes.func\n};\n\nexport default Home;\n","import { useState, useReducer, useEffect } from \"react\";\nimport axios from \"axios\";\n\nconst dataFetchReducer = (state, action) => {\n  switch (action.type) {\n    case \"FETCH_INIT\":\n      return {\n        ...state,\n        isLoading: true,\n        isError: false\n      };\n    case \"FETCH_SUCCESS\":\n      return {\n        ...state,\n        isLoading: false,\n        isError: false,\n        data: action.payload\n      };\n    case \"FETCH_FAILURE\":\n      return {\n        ...state,\n        isLoading: false,\n        isError: true\n      };\n    default:\n      throw new Error();\n  }\n};\n\nconst useAxios = (initialUrl, initialData) => {\n  const [url, setUrl] = useState(initialUrl);\n  const [state, dispatch] = useReducer(dataFetchReducer, {\n    isLoading: true,\n    isError: false,\n    data: initialData\n  });\n\n  useEffect(() => {\n    let didCancel = false;\n    const fetchData = async () => {\n      dispatch({ type: \"FETCH_INIT\" });\n      try {\n        const result = await axios(url);\n        if (!didCancel) {\n          dispatch({ type: \"FETCH_SUCCESS\", payload: result.data });\n        }\n      } catch (error) {\n        if (!didCancel) {\n          dispatch({ type: \"FETCH_FAILURE\" });\n        }\n      }\n    };\n    fetchData();\n    return () => {\n      didCancel = true;\n    };\n  }, [url]);\n  return [state, setUrl];\n};\n\nexport default useAxios;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./BackButton.css\";\n\nfunction BackButton({ className, onClick }) {\n  return (\n    <button className={`back-button ${className}`} onClick={onClick}>\n      <i className=\"fas fa-arrow-left\" />\n      Go Back\n    </button>\n  );\n}\n\nBackButton.propTypes = {\n  className: PropTypes.string,\n  onClick: PropTypes.func\n};\n\nexport default BackButton;\n","// String to camel case\nexport const toUpperInitial = string => {\n  if (typeof string !== \"string\") return string;\n  return string[0].toUpperCase() + string.substr(1);\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./ShowItem.css\";\nimport { toUpperInitial } from \"../../utils\";\n\nfunction ShowItem({\n  className,\n  image,\n  index,\n  title,\n  type,\n  releaseYear,\n  onMoreInfoClick\n}) {\n  return (\n    <div className={`show-item ${className}`}>\n      <img className=\"show-item__image\" src={image} alt=\"Poster\" />\n      <span className=\"show-item__title\">\n        {index}. {title}\n      </span>\n      <span className=\"show-item__type\">{toUpperInitial(type)}</span>\n      <span className=\"show-item__year\">{releaseYear}</span>\n      <button className=\"show-item__info-button\" onClick={onMoreInfoClick}>\n        <i className=\"fas fa-info-circle\" />\n        More Info\n      </button>\n    </div>\n  );\n}\n\nShowItem.propTypes = {\n  className: PropTypes.string,\n  image: PropTypes.string,\n  index: PropTypes.number,\n  title: PropTypes.string,\n  type: PropTypes.string,\n  releaseYear: PropTypes.number,\n  onMoreInfoClick: PropTypes.func\n};\n\nexport default ShowItem;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./LoadingIndicator.css\";\n\nfunction LoadingIndicator({ className }) {\n  return (\n    <div className={`spinner ${className}`} data-testid=\"loading\">\n      <div className=\"double-bounce1\" />\n      <div className=\"double-bounce2\" />\n    </div>\n  );\n}\n\nLoadingIndicator.propTypes = {\n  className: PropTypes.string\n};\n\nexport default LoadingIndicator;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./EmptyState.css\";\n\nfunction EmptyState({ className, icon, message, description }) {\n  return (\n    <div className={`empty-state ${className}`}>\n      {icon && <i className={`fas fa-${icon} empty-state__icon`} />}\n      {message && <p className=\"empty-state__message\">{message}</p>}\n      {description && <p className=\"empty-state__description\">{description}</p>}\n    </div>\n  );\n}\n\nEmptyState.propTypes = {\n  className: PropTypes.string,\n  icon: PropTypes.string,\n  message: PropTypes.string,\n  description: PropTypes.string\n};\n\nexport default EmptyState;\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./ShowList.css\";\nimport useAxios from \"../../hooks/useAxios\";\nimport BackButton from \"../BackButton\";\nimport ShowItem from \"../ShowItem\";\nimport LoadingIndicator from \"../LoadingIndicator\";\nimport EmptyState from \"../EmptyState\";\nimport { toUpperInitial } from \"../../utils\";\n\n// Should come from an environment variable\nconst showsAPI =\n  \"https://raw.githubusercontent.com/StreamCo/react-coding-challenge/master/feed/sample.json\";\n\nfunction ShowList({ type, onBackButtonClick, onDetailsShow }) {\n  const [{ isLoading, isError, data }] = useAxios(showsAPI, {});\n  const [searchQuery, setSearchQuery] = useState();\n\n  let shows = [];\n  if (data && data.entries && data.entries.length) {\n    const showType = type === \"movies\" ? \"movie\" : type;\n    shows = data.entries.filter(({ programType, releaseYear }) => {\n      // Filter out other program types\n      if (programType !== showType) return false;\n      // Filter out releaseYear attribute with value < 2010\n      if (releaseYear < 2010) return false;\n      return true;\n    });\n    // Get only first 21 elements\n    shows = shows.slice(0, 21);\n    // Sort by the title attribute value in ascending alphanumeric order\n    shows = shows.sort((a, b) =>\n      a.title.localeCompare(b.title, \"en\", { numeric: true })\n    );\n    // Filter searched for shows using searchQuery\n    if (searchQuery) {\n      shows = shows.filter(\n        ({ title, programType, releaseYear }) =>\n          title.toLowerCase().includes(searchQuery.toLowerCase()) ||\n          releaseYear.toString().includes(searchQuery) ||\n          programType.toLowerCase().includes(searchQuery.toLowerCase())\n      );\n    }\n  }\n\n  const handleSearch = e => {\n    setSearchQuery(e.target.value);\n  };\n\n  const renderShows = () => {\n    if (isLoading) {\n      return <LoadingIndicator />;\n    }\n\n    if (isError) {\n      return (\n        <EmptyState\n          icon=\"exclamation-circle\"\n          message=\"Oops !\"\n          description=\"Something went wrong, please try again later\"\n        />\n      );\n    }\n\n    if (!shows.length) {\n      return (\n        <EmptyState\n          icon=\"search\"\n          message=\"No results found\"\n          description=\"Try adjusting your search to find what you're looking for\"\n        />\n      );\n    }\n\n    return (\n      <div\n        className=\"show-list__shows-container\"\n        data-testid=\"show-list-container\"\n      >\n        {shows.map((show, index) => (\n          <ShowItem\n            key={show.title}\n            className=\"show-list__item\"\n            image={show.images[\"Poster Art\"].url}\n            title={show.title}\n            index={index + 1}\n            releaseYear={show.releaseYear}\n            type={show.programType}\n            onMoreInfoClick={() => onDetailsShow(show)}\n          />\n        ))}\n      </div>\n    );\n  };\n\n  return (\n    <div>\n      <BackButton\n        className=\"show-list__back-button\"\n        onClick={onBackButtonClick}\n      />\n      <h1 className=\"show-list__title\">Top Rated {toUpperInitial(type)}</h1>\n      <div className=\"show-list__search\">\n        <input\n          className=\"show-list__search__input\"\n          type=\"search\"\n          aria-label=\"Search for a show\"\n          placeholder={`Search for a ${\n            type === \"movies\" ? \"movie\" : \"TV series\"\n          }`}\n          onChange={handleSearch}\n        />\n        <span className=\"show-list__search__icon\">\n          <i className=\"fas fa-search\" /> Search\n        </span>\n      </div>\n      {renderShows()}\n    </div>\n  );\n}\n\nShowList.defaultProps = {\n  type: \"movies\"\n};\n\nShowList.propTypes = {\n  type: PropTypes.string,\n  onBackButtonClick: PropTypes.func,\n  onDetailsShow: PropTypes.func\n};\n\nexport default ShowList;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./ShowDetails.css\";\nimport BackButton from \"../BackButton\";\nimport { toUpperInitial } from \"../../utils\";\n\nfunction ShowDetails({\n  onBackButtonClick,\n  image,\n  title,\n  releaseYear,\n  type,\n  description\n}) {\n  return (\n    <div className=\"show-details\">\n      <div className=\"show-details__header\">\n        <BackButton\n          className=\"show-details__back-button\"\n          onClick={onBackButtonClick}\n        />\n      </div>\n      <div className=\"show-details__body\">\n        <img className=\"show-details__body__image\" src={image} alt=\"Poster\" />\n        <div className=\"show-details__body__info\">\n          <h2 className=\"show-details__body__info__title\">\n            {title} ({releaseYear})\n          </h2>\n          <p className=\"show-details__body__info__type\">\n            Type: {toUpperInitial(type)}\n          </p>\n          <p className=\"show-details__body__info__description\">{description}</p>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nShowDetails.propTypes = {\n  onBackButtonClick: PropTypes.func,\n  image: PropTypes.string,\n  title: PropTypes.string,\n  type: PropTypes.string,\n  description: PropTypes.string,\n  releaseYear: PropTypes.number\n};\n\nexport default ShowDetails;\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport Header from \"../Header\";\nimport Home from \"../Home\";\nimport ShowList from \"../ShowList\";\nimport ShowDetails from \"../ShowDetails\";\n\nfunction App() {\n  const [currentPage, setCurrentPage] = useState(\"home\");\n  const [currentShowInDetailsPage, setCurrentShowInDetailsPage] = useState();\n\n  const handlePageChange = page => () => setCurrentPage(page);\n\n  const handleDetailsShow = type => show => {\n    setCurrentPage(type === \"series\" ? \"seriesDetails\" : \"movieDetails\");\n    setCurrentShowInDetailsPage(show);\n  };\n\n  return (\n    <div className=\"container\">\n      <Header onLogoClick={handlePageChange(\"home\")} />\n      <div className=\"content\">\n        {currentPage === \"home\" && (\n          <Home\n            onMoviesClick={handlePageChange(\"movies\")}\n            onSeriesClick={handlePageChange(\"series\")}\n          />\n        )}\n        {[\"movies\", \"series\"].includes(currentPage) && (\n          <ShowList\n            type={currentPage}\n            onBackButtonClick={handlePageChange(\"home\")}\n            onDetailsShow={handleDetailsShow(currentPage)}\n          />\n        )}\n        {[\"movieDetails\", \"seriesDetails\"].includes(currentPage) && (\n          <ShowDetails\n            image={currentShowInDetailsPage.images[\"Poster Art\"].url}\n            title={currentShowInDetailsPage.title}\n            type={currentShowInDetailsPage.programType}\n            releaseYear={currentShowInDetailsPage.releaseYear}\n            description={currentShowInDetailsPage.description}\n            onBackButtonClick={handlePageChange(\n              currentPage === \"seriesDetails\" ? \"series\" : \"movies\"\n            )}\n          />\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}